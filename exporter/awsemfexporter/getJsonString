import{
	"encoding/json"
	"fmt"
}

type kubernetesObj struct{
	ContainerName string `json: "container_name"`
	Docker internalDockerObj `json: "docker"`
	Host string `json: "host"`
	Labels internalLabelsObj `json: "labels"`
	NamespaceName string `json: "namespace_name"`
	PodId string `json: "pod_id"`
	PodName string `json: "pod_name"`
	PodOwners internalPodOwnersObj `json:"pod_owners"`
	ServiceName string `json: "service_name"`
}

type internalDockerObj struct{
	ContainerId string `json: "container_id"`
}

type internalLabelsObj struct{
	App string `json: "app"`
	PodTemplateHash string `json: "pod-template-hash"`
}

type internalPodOwnersObj struct{
	OwnerKind string `json: "owner_kind"`
	OwnerName string `json: "owner_name"`
}


func main(){
	//create schema
	schema := kubernetesObj{}
	schema.ContainerName = "container_name"
	schema.Docker =
	internalDockerObj{
		ContainerId: "container_id",
	}
	schema.Host = "host_name"
	schema.Labels =
	internalLabelsObj{
		App: "app",
		PodTemplateHash: "pod-template-hash",
	}
	schema.NamespaceName = "namespace_name"
	schema.PodId = "pod_id" 
	schema.PodName = "pod_name"
	schema.PodOwners = 
	internalPodOwnersObj{
			 OwnerKind: "owner_kind" , 
			 OwnerName: "owner_name" ,
		}
	schema.ServiceName = "service_name"

	jsonBytes, err := json.Marshal(schema)
	jsonString := string(jsonBytes)
	fmt.Println(jsonString)
}
